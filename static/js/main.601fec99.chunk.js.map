{"version":3,"sources":["Components/Datetime.js","Components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Datetime","state","date","Date","time","toLocaleTimeString","updateTime","setInterval","setState","dateFormat","this","getDate","getMonth","getFullYear","props","displayBoth","Component","Header","onClick","toggleButton","style","padding","buttonName","App","current","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAiCeA,E,4MA7BdC,MAAQ,CACNC,KAAK,IAAIC,KACTC,MAAK,IAAID,MAAOE,sB,EAIlBC,WAAa,WAEZC,aAAY,WACX,EAAKC,SAAS,CAACN,KAAK,IAAIC,KAASC,MAAK,IAAID,MAAOE,yBAChD,M,4CAGF,WAEE,IAAMI,EAAcC,KAAKT,MAAMC,KAAMS,UAAU,KAAMD,KAAKT,MAAMC,KAAMU,WAAW,GAAK,IAAMF,KAAKT,MAAMC,KAAKW,cAG5G,OACE,gCACGH,KAAKI,MAAMC,aAAe,qDAAwBN,EAAxB,OAE5B,oDAAuBC,KAAKT,MAAMG,QACjCM,KAAKJ,oB,GAzBUU,aCeRC,E,4JAZb,WAGE,OACE,gCACA,uDACA,wBAAQC,QAAWR,KAAKI,MAAMK,aAAcC,MAAS,CAACC,QAAQ,QAA9D,SAAyEX,KAAKI,MAAMQ,oB,GATrEN,aCqCNO,E,4MAhCbtB,MAAQ,CACNc,aAAY,G,EAGdI,aAAe,WAEb,IAAMK,EAAU,EAAKvB,MAAMc,YAC3B,EAAKP,SAAS,CAACO,aAAaS,K,4CAG9B,WACE,IAAIF,EAWN,OARIA,EAFCZ,KAAKT,MAAMc,YAEC,qBAIA,sBAKf,sBAAKU,UAAU,MAAf,UACE,cAAC,EAAD,CAAQN,aAAgBT,KAAKS,aAAcG,WAAcA,IAC1D,cAAC,EAAD,CAAUP,cAAeL,KAAKT,MAAMc,qB,GA1BvBC,aCMHU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.601fec99.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass Datetime extends Component {\r\n\r\n state = {\r\n   date:new Date(),\r\n   time:new Date().toLocaleTimeString(),\r\n   \r\n }\r\n\r\n updateTime = () =>{\r\n\r\n  setInterval(() => {\r\n   this.setState({date:new Date() , time:new Date().toLocaleTimeString()})\r\n }, 1000);\r\n}\r\n\r\n  render() {\r\n  \r\n    const dateFormat = (this.state.date).getDate()+'/'+((this.state.date).getMonth()+1) + '/'+ (this.state.date.getFullYear()); \r\n    \r\n\r\n    return (\r\n      <div>\r\n        {this.props.displayBoth && <h3> Today's Date is : {dateFormat} </h3>}\r\n       \r\n       <h4>Current time is : {this.state.time}</h4>\r\n       {this.updateTime()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Datetime\r\n","import React, { Component } from 'react'\r\n\r\nclass Header extends Component {\r\n\r\n  \r\n  render() {\r\n   \r\n   \r\n    return (\r\n      <div>\r\n      <h1>Date and Time toggler</h1>     \r\n      <button onClick = {this.props.toggleButton} style = {{padding:'10px'}} >{this.props.buttonName}</button>   \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header\r\n","\nimport React,{ Component } from 'react';\nimport './App.css';\nimport Datetime from './Components/Datetime';\nimport Header from './Components/Header';\n\nclass App extends Component {\n  state = {\n    displayBoth:true\n  }\n\n  toggleButton = () =>{\n    \n    const current = this.state.displayBoth;\n    this.setState({displayBoth:!current});\n    \n  }\n  render () {\n    let buttonName;\n    if(this.state.displayBoth)\n    {\n      buttonName = ' Display Time only';\n    }\n    else\n    {\n      buttonName = ' Show Date and time';\n    }\n\n    \n  return (\n    <div className=\"App\">\n      <Header toggleButton = {this.toggleButton} buttonName = {buttonName}/>\n     <Datetime displayBoth = {this.state.displayBoth ? true : false}/>\n    </div>\n  );\n}\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}